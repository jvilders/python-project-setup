[project]
name = "python-project-standard"
version = "0.1.0"
description = "A template for modern Python projects"
readme = "README.md"
requires-python = ">=3.12.3"
dependencies = [
    "pandas>=2.2.3",
    "pydantic>=2.10.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "pandas-stubs>=2.2.3.241126",
    "poethepoet>=0.31.1",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.2",
]

[tool.pytest.ini_options]
addopts = "--cov-fail-under=90 --cov=src --cov-report term-missing --junitxml=test-results/junit.xml --cov-report lcov:test-results/lcov.info --cov-report html:test-results/html_report"

[tool.poe.tasks.lint]
help = "Lint provided python files (lint everything if no files are provided)"
cmd = "ruff check --fix"

[tool.poe.tasks.ci-lint]
help = "Lint everything without auto-fixing, failing if anything is incorrect"
cmd = "ruff check"

[tool.poe.tasks.format]
help = "Format provided python files (format everything if no files are provided)"
cmd = "ruff format"

[tool.poe.tasks.ci-format]
help = "Check everything for formatting violations"
cmd = "ruff format --check"

[tool.poe.tasks.typecheck]
help = "Typecheck provided python files (typecheck everything if no files are provided)"
cmd = "mypy"

[tool.poe.tasks.ci-typecheck]
help = "Typecheck everything"
cmd = "mypy"

[tool.poe.tasks.test]
help = "Run unit tests"
cmd = "pytest test/"

[tool.poe.tasks.build]
help = "Builds the package"
cmd = "uv build"

[tool.poe.tasks.publish]
help = "Publishes the package"
# uv does not have a --dry-run options for its publish command
cmd = "python -c 'print(\"Fake publish step complete!\")'"