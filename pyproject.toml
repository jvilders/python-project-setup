[tool.poetry]
name = "package-name-here"
version = "0.1.0"
description = "A template for modern Python projects"
authors = ["jvilders <60934195+jvilders@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.7.1"
pandas = "^2.2.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.5"
pre-commit = "^3.7.1"
mypy = "^1.10.0"
pandas-stubs = "^2.2.2.240514"
poethepoet = "^0.26.1"
tomli = { version = "^2.0.1", python = "<3.11" }
pytest = "^8.2.2"
pytest-cov = "^5.0.0"


[tool.poe.tasks.lint]
help = "Lint provided python files (lint everything if no files are provided)"
cmd = "ruff check --fix"

[tool.poe.tasks.ci-lint]
help = "Lint everything without auto-fixing, failing if anything is incorrect"
cmd = "ruff check"

[tool.poe.tasks.format]
help = "Format provided python files (format everything if no files are provided)"
cmd = "ruff format"

[tool.poe.tasks.ci-format]
help = "Check everything for formatting violations"
cmd = "ruff format --check"

[tool.poe.tasks.typecheck]
help = "Typecheck provided python files (typecheck everything if no files are provided)"
cmd = "mypy"

[tool.poe.tasks.ci-typecheck]
help = "Typecheck everything"
cmd = "mypy"

[tool.poe.tasks.test]
help = "Run unit tests"
cmd = "python -m scripts.test"

[tool.poe.tasks.build]
help = "Builds the package"
cmd = "python -m scripts.build"

[tool.poe.tasks.publish]
help = "Publishes the package"
cmd = "python -m scripts.publish"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
